## Copyright (C) 2012 - 2018 ENCRYPTED SUPPORT LP <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Please use "/etc/anon-ws-disable-stacked-tor.d/50_user.conf" for your custom
## configuration, which will override the defaults found here.
## When anon-ws-disable-stacked-tor is updated, this file may be overwritten

## Do not try to execute this file. Files in folder /etc/anon-ws-disable-stacked-tor.d
## are `source`d in lexical order by the anon-ws-disable-stacked-tor package by script:
## /usr/lib/anon-ws-disable-stacked-tor/socat-unix-sockets
## Start and stop is up to the anon-ws-disable-stacked-tor systemd service.

## Usage:
## sudo service anon-ws-disable-stacked-tor stop
## sudo service anon-ws-disable-stacked-tor start
## sudo service anon-ws-disable-stacked-tor restart
## sudo service anon-ws-disable-stacked-tor status

## bash fragment

[ -n "$pre_command" ] || pre_command="sudo --non-interactive -u debian-tor"

port_list+=" 9050 " ## system Tor default SocksPort
port_list+=" 9150 " ## Tor Browser Bundle default SocksPort
port_list+=" 9152 " ## Tor Messenger default SocksPort
port_list+=" 9051 " ## Tor default ControlPort
port_list+=" 9151 " ## Tor Browser Bundle default ControlPort
port_list+=" 9153 " ## Tor Messenger default ControlPort

for single_port in $port_list ; do
   $pre_command socat TCP-LISTEN:"$single_port",fork,bind=127.0.0.1 TCP:$GATEWAY_IP:"$single_port" &
done

## Create a unix domain socket files such as
## /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9050.sock and forward those
## to $GATEWAY_IP:9150 etc. See also:
## https://phabricator.whonix.org/T192

file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9050.sock "
file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9150.sock "
file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9152.sock "
file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9051.sock "
file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9151.sock "
file_list+=" /var/run/anon-ws-disable-stacked-tor/127.0.0.1_9153.sock "

for file_item in $file_list ; do
   ## example: 127.0.0.1_9050.sock
   file_basename="${file_item##*/}"
   ## example: 127.0.0.1_9050
   file_without_extension="${file_basename%.*}"
   ## example: 9050
   port="${file_without_extension##*_}"

   $pre_command socat -t100 UNIX-LISTEN:"$file_item",mode=777,reuseaddr,fork TCP:$GATEWAY_IP:"$port" &
done

## system Tor default SocksSocket
$pre_command socat -t100 UNIX-LISTEN:/var/run/tor/socks,mode=777,reuseaddr,fork TCP:$GATEWAY_IP:9050 &

## Debian /usr/share/tor/tor-service-defaults-torrc uses '/var/run/tor/control' Tor ControlSocket
$pre_command socat -t100 UNIX-LISTEN:/var/run/tor/control,mode=777,reuseaddr,fork TCP:$GATEWAY_IP:9051 &

## To test this, you could use:
## sudo --non-interactive -u debian-tor socat - UNIX-CONNECT:/var/run/tor/socks
## Then type:
## GET
## <enter>
## The expected reply includes 'Tor is not an HTTP Proxy'.
